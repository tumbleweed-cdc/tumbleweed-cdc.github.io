"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[716],{7028:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>r,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"using_tumbleweed","title":"5. Using Tumbleweed","description":"1. Once Tumbleweed is deployed and stable on AWS, the CLI provides the user with a URL to access the Tumbleweed UI. They are first greeted by the landing page.","source":"@site/docs/using_tumbleweed.md","sourceDirName":".","slug":"/using_tumbleweed","permalink":"/docs/using_tumbleweed","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"using_tumbleweed","title":"5. Using Tumbleweed","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"4. Tumbleweed","permalink":"/docs/tumbleweed"},"next":{"title":"6. Challenges","permalink":"/docs/challenges"}}');var i=t(4848),a=t(8453);const r={id:"using_tumbleweed",title:"5. Using Tumbleweed",sidebar_position:5},l="5. Using Tumbleweed",c={},u=[];function d(e){const s={h1:"h1",header:"header",li:"li",ol:"ol",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"5-using-tumbleweed",children:"5. Using Tumbleweed"})}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Once Tumbleweed is deployed and stable on AWS, the CLI provides the user with a URL to access the Tumbleweed UI. They are first greeted by the landing page."}),"\n"]}),"\n",(0,i.jsx)("figure",{children:(0,i.jsx)("img",{src:"/img/using_tumbleweed_1.png",className:"using-tumbleweed-image",alt:"TumbleweedLandingPage",width:"80%"})}),"\n",(0,i.jsxs)(s.ol,{start:"2",children:["\n",(0,i.jsx)(s.li,{children:"A user can navigate to the sources page and create a new source database connection. This creates a new Debezium PostgreSQL connector on a target producer service database along with the topic(s) which that database will produce messages to. Creating a new source connector also builds an outbox table on the producer database."}),"\n"]}),"\n",(0,i.jsx)("figure",{children:(0,i.jsx)("img",{src:"/img/using_tumbleweed_2.png",className:"using-tumbleweed-image",alt:"TumbleweedSourcePage",width:"80%"})}),"\n",(0,i.jsx)("figure",{children:(0,i.jsx)("img",{src:"/img/new_source.png",className:"using-tumbleweed-image",alt:"TumbleweedSourceInfo",width:"80%"})}),"\n",(0,i.jsx)("figure",{children:(0,i.jsx)("img",{src:"/img/using_tumbleweed_4.png",className:"using-tumbleweed-image",alt:"TumbleweedSourceCreated",width:"80%"})}),"\n",(0,i.jsxs)(s.ol,{start:"3",children:["\n",(0,i.jsx)(s.li,{children:"Once a source is created, the user can click on the source to see a source\u2019s details."}),"\n"]}),"\n",(0,i.jsx)("figure",{children:(0,i.jsx)("img",{src:"/img/using_tumbleweed_5.png",className:"using-tumbleweed-image",alt:"TumbleweedSourceDetails",width:"80%"})}),"\n",(0,i.jsxs)(s.ol,{start:"4",children:["\n",(0,i.jsx)(s.li,{children:"A user can then navigate to the consumers page and create a new consumer, which would be a microservice that \u201csubscribes\u201d to the Kafka topics for the event records produced at source microservices."}),"\n"]}),"\n",(0,i.jsx)("figure",{children:(0,i.jsx)("img",{src:"/img/using_tumbleweed_6.png",className:"using-tumbleweed-image",alt:"TumbleweedConsumersPage",width:"80%"})}),"\n",(0,i.jsx)("figure",{children:(0,i.jsx)("img",{src:"/img/using_tumbleweed_7.png",className:"using-tumbleweed-image",alt:"TumbleweedConsumersInfo",width:"80%"})}),"\n",(0,i.jsx)("figure",{children:(0,i.jsx)("img",{src:"/img/using_tumbleweed_8.png",className:"using-tumbleweed-image",alt:"TumbleweedConsumerCreated",width:"80%"})}),"\n",(0,i.jsxs)(s.ol,{start:"5",children:["\n",(0,i.jsx)(s.li,{children:"Once a consumer is created, the user can click on the consumer to see the consumer\u2019s details including a Tumbleweed endpoint URL. This URL can be used to create a connection for a consumer service to receive a stream of data from the topics they are subscribed to."}),"\n"]}),"\n",(0,i.jsx)("figure",{children:(0,i.jsx)("img",{src:"/img/using_tumbleweed_9.png",className:"using-tumbleweed-image",alt:"TumbleweedConsumerDetails",width:"80%"})}),"\n",(0,i.jsxs)(s.ol,{start:"6",children:["\n",(0,i.jsx)(s.li,{children:"Additionally, the user can click on the topics page to see the list of current topics and some details about each topic."}),"\n"]}),"\n",(0,i.jsx)("figure",{children:(0,i.jsx)("img",{src:"/img/using_tumbleweed_10.png",className:"using-tumbleweed-image",alt:"TumbleweedTopicsPage",width:"80%"})}),"\n",(0,i.jsx)("figure",{children:(0,i.jsx)("img",{src:"/img/using_tumbleweed_11.png",className:"using-tumbleweed-image",alt:"TumbleweedTopicsDetails",width:"80%"})})]})}function o(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>l});var n=t(6540);const i={},a=n.createContext(i);function r(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);